name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: wintersalmon/github-webhook-pull-request

jobs:
  build:
    runs-on: self-hosted  # Specifies the self-hosted runner
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./src
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Deploy to k3s Cluster
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to k3s
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          # Decode the kubeconfig and save it to a file
          echo "$KUBECONFIG_CONTENT" | base64 --decode > ~/.kube/config

          # Update the image in deployment.yaml with the new image tag
          sed -i "s|your-dockerhub-username/github-webhook-pull-request:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" deploy/deployment.yaml
          
          # Apply Kubernetes manifests
          kubectl apply -f deploy/namespace.yaml
          kubectl apply -f deploy/deployment.yaml
          kubectl apply -f deploy/service.yaml
          kubectl apply -f deploy/ingress.yaml

          # Optional: Wait for rollout to complete
          kubectl rollout status deployment/github-webhook-pull-request -n myapps
